{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport uuid from \"uuid\";\nconst useAxios = () => {\n  _s();\n  const [state, setState] = useState([]);\n  const updateState = async url => {\n    const response = await axios.get(`${url}`);\n    setState(currState => [...currState, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  return [state, updaterState];\n};\n_s(useAxios, \"yua82o5JV2p+bdzgVd8naWBubMo=\");\nexport default useAxios;","map":{"version":3,"names":["React","useState","axios","uuid","useAxios","_s","state","setState","updateState","url","response","get","currState","data","id","updaterState"],"sources":["/Users/samuelgonzalez/Desktop/Springboard Projects/39.10/react-cards-pokemon/src/hooks/useAxios.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport uuid from \"uuid\";\n\nconst useAxios = () => {\n\n  const [state, setState] = useState([]);\n\n  const updateState = async (url) => {\n    const response = await axios.get(\n      `${url}`\n    );\n    setState(currState => [...currState, { ...response.data, id: uuid() }]);\n  }\n\n  return [state, updaterState]\n    \n}\n\nexport default useAxios"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,WAAW,GAAG,MAAOC,GAAG,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC7B,GAAEF,GAAI,EACT,CAAC;IACDF,QAAQ,CAACK,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE;MAAE,GAAGF,QAAQ,CAACG,IAAI;MAAEC,EAAE,EAAEX,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACzE,CAAC;EAED,OAAO,CAACG,KAAK,EAAES,YAAY,CAAC;AAE9B,CAAC;AAAAV,EAAA,CAbKD,QAAQ;AAed,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}