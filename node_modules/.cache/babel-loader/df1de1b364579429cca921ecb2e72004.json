{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\n * \n */\nconst useFlip = function () {\n  _s();\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const [isFacingUp, setIsFacingUp] = useState(state);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n  return [isFacingUp, flipCard];\n};\n_s(useFlip, \"F74Fg9eBySk/N0Un6qS1g7C/B+E=\");\nexport default useFlip;","map":{"version":3,"names":["React","useState","useFlip","_s","state","arguments","length","undefined","isFacingUp","setIsFacingUp","flipCard","isUp"],"sources":["/Users/samuelgonzalez/Desktop/Springboard Projects/39.10/react-cards-pokemon/src/hooks/useFlip.jsx"],"sourcesContent":["import React, {useState} from 'react'\n\n/**\n * \n */\nconst useFlip = (state=true) => {\n    const [isFacingUp, setIsFacingUp] = useState(state);\n    const flipCard = () => {\n      setIsFacingUp(isUp => !isUp);\n    };\n    return [isFacingUp, flipCard]\n}\n\nexport default useFlip"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;AACA;AACA;AACA,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAgB;EAAAC,EAAA;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EACvB,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACG,KAAK,CAAC;EACnD,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EACD,OAAO,CAACH,UAAU,EAAEE,QAAQ,CAAC;AACjC,CAAC;AAAAP,EAAA,CANKD,OAAO;AAQb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}